module.exports.config = {
  name: 'autott',
  version: '10.02',
  hasPermssion: 2,
  credits: 'DC-Nam', // Bok idea th·ªùi ti·∫øt
  description: 'T·ª± ƒë·ªông g·ª≠i tin nh·∫Øn theo gi·ªù ƒë√£ c√†i!',
  commandCategory: 'H·ªá th·ªëng support-bot',
  usages: 'autott',
  cooldowns: 3
};
const nam = [{

  timer: '6:00:00 AM',
  message: ['\n{abc}']
},
  {
    timer: '12:00:00 PM',
  message: ['\n{abc}']
},
           {
  timer: '6:00:00 PM',
  message: ['\n{abc}']
},
           {
  timer: '10:00:00 PM',
  message: ['\n{abc}']
},
           {
  timer: '0:00:00 PM',
  message: ['\n{abc}']
},
           {
  }];
module.exports.onLoad = o => setInterval(async() => {
  const r = a => a[Math.floor(Math.random()*a.length)];
  if (√° = nam.find(i => i.timer == new Date(Date.now()+25200000).toLocaleString().split(/,/).pop().trim())){
const axios = require('axios');
const time = process.uptime();
   var hours = Math.floor(time / (60 * 60));
  var minutes = Math.floor((time % (60 * 60)) / 60);
var seconds = Math.floor(time % 60);
var msg = r(√°.message);
const res = await axios.get(`https://api.popcat.xyz/weather?q=${encodeURI('H·ªì Ch√≠ Minh')}`);
  var abc =`[üê≤]=== „Äé NOTIFICATION WEATHER „Äè ===[üê≤]\n‚óÜ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚óÜ\n\n[üê≤]‚ûú ùó∞ùóÆÃÇÃ£ùóΩ ùóªùóµùóÆÃÇÃ£ùòÅ ùòÅùóµùóºÃõÃÄùó∂ ùòÅùó∂ùó≤ÃÇÃÅùòÅ ùòÅùóÆÃ£ùó∂ ${res.data[0].location.name}\n[üê≤]‚ûú ùó©ùóÆÃÄùóº ùóπùòÇÃÅùó∞: ${res.data[0].current.day} ${res.data[0].current.date}\n[üê≤]‚ûú ùó°ùóµùó∂ùó≤ÃÇÃ£ùòÅ ƒëùóºÃÇÃ£: ${res.data[0].current.temperature}¬∞${res.data[0].location.degreetype}\n[üê≤]‚ûú ùó†ùóºÃÇ ùòÅùóÆÃâ: ${res.data[0].current.skytext}\n[üê≤]‚ûú ƒëùóºÃÇÃ£ ùóÆÃÇÃâùó∫: ${res.data[0].current.humidity}\n[üê≤]‚ûú ùóõùòÇÃõùóºÃõÃÅùóªùó¥ ùó¥ùó∂ùóºÃÅ: ${res.data[0].current.winddisplay}\n[üê≤]‚ûú ùóöùóµùó∂ ùóªùóµùóÆÃÇÃ£ùóª ùòÉùóÆÃÄùóº ùóπùòÇÃÅùó∞: ${res.data[0].current.observationtime} \n\n[üê≤]‚ûú ùêçùê°ùêöÃ£ÃÇùê© ${global.config.PREFIX}weather ùê≠ùê¢Ãâùêßùê°/ùê≠ùê°ùêöÃÄùêßùê° ùê©ùê°ùê®ÃÇÃÅ ƒëùêûÃÇÃâ ùê±ùêûùê¶ ùê≠ùê°ùê®ÃõÃÄùê¢ ùê≠ùê¢ùêûÃÇÃÅùê≠ ùêßùê°ùêûÃÅ!!!!`;
  msg = msg.replace(/{abc}/,abc);
msg = msg.replace(/{hours}/g, hours)
msg = msg.replace(/{minutes}/g, minutes)
msg = msg.replace(/{seconds}/g, seconds)
  msg = msg.replace(/{time}/g, require("moment-timezone").tz("Asia/Ho_Chi_Minh").format("HH:mm:ss (D/MM/YYYY) (dddd)")).replace(/{thinh}/g, (await axios.get(`https://docs-api.jrtxtracy.repl.co/saying/hearing?apikey=JRTvip_2200708248`)).data.data)
          msg = {
              body: msg, attachment: (await axios.get((await axios.get(`https://docs-api.jrtxtracy.repl.co/images/girl?apikey=JRTvip_2200708248`)).data.data, {
                  responseType: 'stream'
              })).data
          };
 global.data.allThreadID.forEach(i => o.api.sendMessage(msg, i));
  };
}, 1000);

module.exports.run = async o => {
  try {
      const axios = global.nodemodule["axios"];
      const fs = global.nodemodule["fs-extra"];
      const request = global.nodemodule["request"];
      const { api, event, args } = o;
      const { threadID, messageID } = event;
      var bok = args.join(" ");
      if (!bok) return api.sendMessage("[üê≤]‚ûú Nh·∫≠p t·ªânh/tp c·∫ßn xem th·ªùi ti·∫øt", threadID);
      const res = await axios.get(`https://api.popcat.xyz/weather?q=${encodeURI(bok)}`);
      const bokk = res.data[0].forecast;
      var text = `[üê≤]‚ûú Th·ªùi ti·∫øt c·ªßa: ${bok} v√†o c√°c ng√†y`;
      for (let i = 0; i < 5; i++) {
          text += `\n${i + 1}. ${bokk[i].day} ${bokk[i].date}\n[üê≤]‚ûú Nhi·ªát ƒë·ªô d·ª± b√°o: t·ª´ ${bokk[i].low} ƒë·∫øn ${bokk[i].high}\n[üê≤]‚ûú M√¥ t·∫£: ${bokk[i].skytextday}\n[üê≤]‚ûú T·ª∑ l·ªá m∆∞a: ${bokk[i].precip}\n`
      };
      api.sendMessage(text, threadID, messageID)
  } catch (err) { api.sendMessage(`${err}`, threadID) }
}  