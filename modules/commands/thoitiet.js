module.exports.config = {
    name: 'thoitiet',
    version: 'beta',
    hasPermssion: 0,
    credits: 'DC-Nam',// Bok idea th·ªùi ti·∫øt
    description: 'T·ª± ƒë·ªông g·ª≠i tin nh·∫Øn theo gi·ªù ƒë√£ c√†i!',
    commandCategory: 'ti·ªán √≠ch',
    usages: '[]',
    cooldowns: 3
};
const nam = [{
    timer: '7:55:00 AM',
    message: ['\n{abc}']
},
             {
    timer: '11:40:00 PM',
    message: ['khuya r·ªìi ng·ªß s·ªõm ƒëi. Baiiii']
}];
module.exports.onLoad = o => setInterval(async() => {
    const r = a => a[Math.floor(Math.random()*a.length)];
    if (√° = nam.find(i => i.timer == new Date(Date.now()+25200000).toLocaleString().split(/,/).pop().trim())){
     const axios = require('axios');
  const res = await axios.get(`https://api.popcat.xyz/weather?q=${encodeURI('H√† N·ªôi')}`);
    var abc = `=====„Äå ùóßùóµùóºÃõÃÄùó∂ ùóßùó∂ùó≤ÃÇÃÅùòÅ „Äç=====\n‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ\n‚Üí C·∫≠p nh·∫≠t th·ªùi ti·∫øt t·∫°i: ${res.data[0].location.name}\n‚Üí V√†o l√∫c: ${res.data[0].current.day} ${res.data[0].current.date}\n‚Üí Nhi·ªát ƒë·ªô: ${res.data[0].current.temperature}¬∞${res.data[0].location.degreetype}\n‚Üí M√¥ t·∫£: ${res.data[0].current.skytext}\n‚Üí ƒê·ªô ·∫©m:${res.data[0].current.humidity}\nH∆∞·ªõng gi√≥: ${res.data[0].current.winddisplay}\nGhi nh·∫≠n l√∫c: ${res.data[0].current.observationtime} `;
      
   global.data.allThreadID.forEach(i => o.api.sendMessage(r(√°.message).replace(/{abc}/g, abc), i));
    };
}, 1000);

module.exports.run = async o => {
  try{
  const axios = global.nodemodule["axios"];
  const fs = global.nodemodule["fs-extra"];
  const request = global.nodemodule["request"];
  const { api, event, args } = o;
	const { threadID, messageID } = event;
  var bok = args.join(" ");
  if(!bok) return api.sendMessage("nh·∫≠p t·ªânh/tp c·∫ßn xem th·ªùi ti·∫øt", threadID);
  const res = await axios.get(`https://api.popcat.xyz/weather?q=${encodeURI(bok)}`);
  const a = res.data[0].forecast;
  var text = `Th·ªùi ti·∫øt c·ªßa: ${bok} v√†o c√°c ng√†y`;
  for (let i = 0; i < 5; i++) {
    text += `\n${i+1}-> ${a[i].day} ${a[i].date}\n=>Nhi·ªát ƒë·ªô d·ª± b√°o: t·ª´ ${a[i].low} ƒë·∫øn ${a[i].high}\n=>M√¥ t·∫£: ${a[i].skytextday}\n=>T·ª∑ l·ªá m∆∞a: ${a[i].precip}\n`
  };
  api.sendMessage(text, threadID, messageID)
  }catch(err){api.sendMessage(`${err}`, threadID)}
  }