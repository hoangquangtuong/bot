/*let fs = require("fs-extra");
module.exports.config = {
    name: "hi",
    version: "1.2.0",
    hasPermssion: 0,
    credits: "Kanichi fix by TTK",
    description: "d√πng ƒëi r·ªìi bi·∫øt :v",
    commandCategory: "G·ªçi bot",
    usages: "[on/off]",
    cooldowns: 5,
    denpendencies: {
        axios: "",
        "moment-timezone": "",
        "fs-extra": ""
    }
}, module.exports.onLoad = () => {
    let request = require("request"),
        dirMaterial = __dirname + "/noprefix/";
    fs.existsSync(dirMaterial + "noprefix") || fs.mkdirSync(dirMaterial, {
        recursive: !0
    }), fs.existsSync(dirMaterial + "bai.gif") || request("https://i.imgur.com/uVALChk.gif").pipe(fs.createWriteStream(dirMaterial + "bai.gif")), fs.existsSync(dirMaterial + "ng·ªß.gif") || request("https://i.pinimg.com/originals/0f/e1/16/0fe1161b019a6d11f39d267c284ec67d.gif").pipe(fs.createWriteStream(dirMaterial + "ng·ªß.gif"))
}, module.exports.handleEvent = async ({
    event,
    api,
    Users
}) => {
    let {
        get: get
    } = require("axios"), {
        threadID: threadID,
        senderID: senderID
    } = event, m = (await get("https://apimyjrt.nguyenhaidang.ml/hololive.php")).data.data, cc = (await get(m, {
        responseType: "stream"
    })).data, moment = require("moment-timezone"), data2 = ["ùíïùíêÃÇÃÅùíï ùíçùíÇÃÄùíèùíâ ü•∞", "ùíóùíñùíä ùíóùíÜÃâ üòÑ", "ùíâùíÇÃ£ùíèùíâ ùíëùíâùíñÃÅùíÑ ‚ù§Ô∏è", "ùíöùíÜÃÇùíñ ƒëùíêÃõÃÄùíä üòò"], text = data2[Math.floor(Math.random() * data2.length)], hours = moment.tz("Asia/Ho_Chi_Minh").format("HHmm"), session = hours > 0 && hours <= 400 ? "ùíîùíÇÃÅùíèùíà ùíïùíäùíèùíâ ùíéùíêÃõ" : hours > 401 && hours <= 700 ? "ùíîùíÇÃÅùíèùíà ùíîùíêÃõÃÅùíé" : hours > 701 && hours <= 1e3 ? "ùíîùíÇÃÅùíèùíà" : hours > 1001 && hours <= 1200 ? "ùíïùíìùíñÃõùíÇ" : hours > 1201 && hours <= 1700 ? "ùíÑùíâùíäùíÜÃÇÃÄùíñ" : hours > 1701 && hours <= 1800 ? "ùíÑùíâùíäùíÜÃÇÃÄùíñ ùíïùíÇÃÄ" : hours > 1801 && hours <= 2100 ? "ùíïùíêÃÇÃÅùíä" : hours > 2101 && hours <= 2400 ? "ùíïùíêÃÇÃÅùíä ùíéùíñùíêÃ£ÃÇùíè" : "l·ªói", name = await Users.getNameUser(senderID), msg = {
        body: `ùêóùê¢ùêß ùêúùê°ùêöÃÄùê® ${name}, ùêúùê°ùêÆÃÅùêú ùêõùêöÃ£ùêß ùê¶ùê®Ã£ÃÇùê≠ ùêõùêÆùê®ÃÇÃâùê¢ ${session} ${text}`,
        attachment: cc
    }, msg2 = {
        body: `ùêÅùêöùê¢ ùêõùêöÃ£ùêß ${name}, ùêíùêûùêû ùê≤ùê®ùêÆ ùêßùêûùê±ùê≠ ùê≠ùê¢ùê¶ùêû‚ù§Ô∏è`,
        attachment: cc
    }, msg3 = {
        body: `ùë™ùíâùíñÃÅùíÑ ${name} ùíèùíàùíñÃâ ùíèùíàùíêùíè ùíèùíâùíÜÃÅ üòò`,
        attachment: cc
    };
    if (1 == config.autoSend) {
        if (["hi", "ch√†o", "hello", "Hello", "Hi", "Ch√†o", "hey", "Hey", "H√≠", "h√≠", "H√≠ ae", "h√≠ ae", "hi mng", "H√≠ mng"].find((i => i == event.body))) return api.sendMessage(msg, threadID, ((error, info) => {
            setTimeout((() => {
                api.unsendMessage(info.messageID)
            }), 6e4)
        }));
        if (["bye", "bai", "t·∫°m bi·ªát", "Bye", "pp", "Pp", "Bai", "T·∫°m bi·ªát"].find((i => i == event.body))) return api.sendMessage(msg2, threadID, ((error, info) => {
            setTimeout((() => {
                api.unsendMessage(info.messageID)
            }), 6e4)
        }));
        if (["ng·ªß", "ƒëi ng·ªß ƒë√¢y", "nn", "ng·ªß ngon", "g9", "nn nha", "Ng·ªß", "ƒêi ng·ªß ƒë√¢y", "Nn", "Ng·ªß ngon", "G9", "Nn nha", "nnmsd", "Nnmsd", "nnmd", "Nnmd"].find((i => i == event.body))) return api.sendMessage(msg3, threadID, ((error, info) => {
            setTimeout((() => {
                api.unsendMessage(info.messageID)
            }), 6e4)
        }))
    }
}, module.exports.run = async function({
    event,
    api,
    args,
    Threads
}) {
    let fs = require("fs-extra"),
        {
            configPath: configPath
        } = global.client,
        {
            threadID: threadID
        } = event,
        threadSetting = (await Threads.getData(String(threadID))).data || {},
        prefix = threadSetting.hasOwnProperty("PREFIX") ? threadSetting.PREFIX : global.config.PREFIX,
        config = require(process.cwd() + "/config.json");
    if (!args[0]) return api.sendMessage(`B·∫°n c√≥ th·ªÉ d√πng\n==> ${prefix}${this.config.name} on/o ƒë·ªÉ b·∫≠t th√¥ng b√°o\n==> ${prefix}${this.config.name} off/of ƒë·ªÉ t·∫Øt th√¥ng b√°o`, threadID);
    if ("on" != args[0].toLowerCase() && "off" != args[0].toLowerCase() && "o" != args[0].toLowerCase() && "of" != args[0].toLowerCase()) return api.sendMessage("Ch·ªâ x√†i on/off ho·∫∑c o/of", threadID);
    switch (args[0]) {
        case "o":
        case "on":
            0 == config.autoSend && (config.autoSend = !0, api.sendMessage("[‚öúÔ∏è] B·∫≠t th√†nh c√¥ng g·ª≠i l·ªùi ch√†o ƒë·∫øn th√†nh vi√™n", threadID)), fs.writeFileSync(configPath, JSON.stringify(config, null, 4), "utf8");
            break;
        case "of":
        case "off":
            1 == config.autoSend && (config.autoSend = !1, api.sendMessage("[‚öúÔ∏è] T·∫Øt th√†nh c√¥ng g·ª≠i l·ªùi ch√†o ƒë·∫øn th√†nh vi√™n", threadID)), fs.writeFileSync(configPath, JSON.stringify(config, null, 4), "utf8");
            break;
        default:
            return global.utils.throwError(this.config.name, threadID)
    }
};*/




/*let fs = require("fs-extra");
module.exports.config = {
    name: "hi",
    version: "1.2.0",
    hasPermssion: 0,
    credits: "Kanichi fix by TTK",// l·ª•m b·ªüi Qtuong
    description: "d√πng ƒëi r·ªìi bi·∫øt :v",
    commandCategory: "G·ªçi bot",
    usages: "[on/off]",
    cooldowns: 5,
    denpendencies: {
        axios: "",
        "moment-timezone": "",
        "fs-extra": ""
    }
}, module.exports.onLoad = () => {
    let request = require("request"),
        dirMaterial = __dirname + "/noprefix/";
    fs.existsSync(dirMaterial + "noprefix") || fs.mkdirSync(dirMaterial, {
        recursive: !0
    }), fs.existsSync(dirMaterial + "bai.gif") || request("https://i.imgur.com/uVALChk.gif").pipe(fs.createWriteStream(dirMaterial + "bai.gif")), fs.existsSync(dirMaterial + "ng·ªß.gif") || request("https://i.pinimg.com/originals/0f/e1/16/0fe1161b019a6d11f39d267c284ec67d.gif").pipe(fs.createWriteStream(dirMaterial + "ng·ªß.gif"))
}, module.exports.handleEvent = async ({
    event,
    api,
    Users
}) => {
    let {
        get: get
    } = require("axios"), {
        threadID: threadID,
        senderID: senderID
    } = event, m = (await get("https://apimyjrt.nguyenhaidang.ml/hololive.php")).data.data, cc = (await get(m, {
        responseType: "stream"
    })).data, moment = require("moment-timezone"), data2 = ["ùíïùíêÃÇÃÅùíï ùíçùíÇÃÄùíèùíâ ü•∞", "ùíóùíñùíä ùíóùíÜÃâ üòÑ", "ùíâùíÇÃ£ùíèùíâ ùíëùíâùíñÃÅùíÑ ‚ù§Ô∏è", "ùíöùíÜÃÇùíñ ƒëùíêÃõÃÄùíä üòò"], text = data2[Math.floor(Math.random() * data2.length)], hours = moment.tz("Asia/Ho_Chi_Minh").format("HHmm"), session = hours > 0 && hours <= 400 ? "ùíîùíÇÃÅùíèùíà ùíïùíäùíèùíâ ùíéùíêÃõ" : hours > 401 && hours <= 700 ? "ùíîùíÇÃÅùíèùíà ùíîùíêÃõÃÅùíé" : hours > 701 && hours <= 1e3 ? "ùíîùíÇÃÅùíèùíà" : hours > 1001 && hours <= 1200 ? "ùíïùíìùíñÃõùíÇ" : hours > 1201 && hours <= 1700 ? "ùíÑùíâùíäùíÜÃÇÃÄùíñ" : hours > 1701 && hours <= 1800 ? "ùíÑùíâùíäùíÜÃÇÃÄùíñ ùíïùíÇÃÄ" : hours > 1801 && hours <= 2100 ? "ùíïùíêÃÇÃÅùíä" : hours > 2101 && hours <= 2400 ? "ùíïùíêÃÇÃÅùíä ùíéùíñùíêÃ£ÃÇùíè" : "l·ªói", name = await Users.getNameUser(senderID), msg = {
        body: `ùêóùê¢ùêß ùêúùê°ùêöÃÄùê® ${name}, ùêúùê°ùêÆÃÅùêú ùêõùêöÃ£ùêß ùê¶ùê®Ã£ÃÇùê≠ ùêõùêÆùê®ÃÇÃâùê¢ ${session} ${text}`,
        attachment: cc
    }, msg2 = {
        body: `ùêÅùêöùê¢ ùêõùêöÃ£ùêß ${name}, ùêíùêûùêû ùê≤ùê®ùêÆ ùêßùêûùê±ùê≠ ùê≠ùê¢ùê¶ùêû‚ù§Ô∏è`,
        attachment: cc
    }, msg3 = {
        body: `ùë™ùíâùíñÃÅùíÑ ${name} ùíèùíàùíñÃâ ùíèùíàùíêùíè ùíèùíâùíÜÃÅ üòò`,
        attachment: cc
    };
    if (1 == config.autoSend) {
        if (["hi", "ch√†o", "hello", "Hello", "Hi", "Ch√†o", "hey", "Hey", "H√≠", "h√≠", "H√≠ ae", "h√≠ ae", "hi mng", "H√≠ mng"].find((i => i == event.body))) return api.sendMessage(msg, threadID, ((error, info) => {
            setTimeout((() => {
                api.unsendMessage(info.messageID)
            }), 6e4)
        }));
        if (["bye", "bai", "t·∫°m bi·ªát", "Bye", "pp", "Pp", "Bai", "T·∫°m bi·ªát"].find((i => i == event.body))) return api.sendMessage(msg2, threadID, ((error, info) => {
            setTimeout((() => {
                api.unsendMessage(info.messageID)
            }), 6e4)
        }));
        if (["ng·ªß", "ƒëi ng·ªß ƒë√¢y", "nn", "ng·ªß ngon", "g9", "nn nha", "Ng·ªß", "ƒêi ng·ªß ƒë√¢y", "Nn", "Ng·ªß ngon", "G9", "Nn nha", "nnmsd", "Nnmsd", "nnmd", "Nnmd"].find((i => i == event.body))) return api.sendMessage(msg3, threadID, ((error, info) => {
            setTimeout((() => {
                api.unsendMessage(info.messageID)
            }), 6e4)
        }))
    }
}, module.exports.run = async function({
    event,
    api,
    args,
    Threads
}) {
    let fs = require("fs-extra"),
        {
            configPath: configPath
        } = global.client,
        {
            threadID: threadID
        } = event,
        threadSetting = (await Threads.getData(String(threadID))).data || {},
        prefix = threadSetting.hasOwnProperty("PREFIX") ? threadSetting.PREFIX : global.config.PREFIX,
        config = require(process.cwd() + "/config.json");
    if (!args[0]) return api.sendMessage(`B·∫°n c√≥ th·ªÉ d√πng\n==> ${prefix}${this.config.name} on/o ƒë·ªÉ b·∫≠t th√¥ng b√°o\n==> ${prefix}${this.config.name} off/of ƒë·ªÉ t·∫Øt th√¥ng b√°o`, threadID);
    if ("on" != args[0].toLowerCase() && "off" != args[0].toLowerCase() && "o" != args[0].toLowerCase() && "of" != args[0].toLowerCase()) return api.sendMessage("Ch·ªâ x√†i on/off ho·∫∑c o/of", threadID);
    switch (args[0]) {
        case "o":
        case "on":
            0 == config.autoSend && (config.autoSend = !0, api.sendMessage("[‚öúÔ∏è] B·∫≠t th√†nh c√¥ng g·ª≠i l·ªùi ch√†o ƒë·∫øn th√†nh vi√™n", threadID)), fs.writeFileSync(configPath, JSON.stringify(config, null, 4), "utf8");
            break;
        case "of":
        case "off":
            1 == config.autoSend && (config.autoSend = !1, api.sendMessage("[‚öúÔ∏è] T·∫Øt th√†nh c√¥ng g·ª≠i l·ªùi ch√†o ƒë·∫øn th√†nh vi√™n", threadID)), fs.writeFileSync(configPath, JSON.stringify(config, null, 4), "utf8");
            break;
        default:
            return global.utils.throwError(this.config.name, threadID)
    }
};*/






module.exports.config = {
  name: "hi",
  version: "1.0.0",
  hasPermssion: 0,
  credit: "Sam",
  description: "hi g·ª≠i sticker",
  commandCategory: "Ti·ªán √≠ch",
  usages: "[text]",
  cooldowns: 5
}

module.exports.handleEvent = async ({ event, api, Users }) => {
  let KEY = [ 
    "hello",
    "2",
    "hi",
    "hai",
    "ch√†o",
    "h√≠",
    "h√≠√≠",
    "h√¨",
    "h√¨√¨",
    "l√¥",
    "hii",
    "helo",
    "h√™ nh√¥",
    "hi mn"
  ];
  let thread = global.data.threadData.get(event.threadID) || {};
  if (typeof thread["hi"] == "undefined", thread["hi"] == false) return
  else {
  if (KEY.includes(event.body.toLowerCase()) !== false) {
    let data = [
      "2523892817885618",
      "2523892964552270",
      "2523893081218925",
      "2523893217885578",
      "2523893384552228",
      "2523892544552312",
      "2523892391218994",
      "2523891461219087",
      "2523891767885723",
      "2523891204552446",
      "2523890691219164",
      "2523890981219135",
      "2523890374552529",
      "2523889681219265",
      "2523889851219248",
      "2523890051219228",
      "2523886944552872",
      "2523887171219516",
      "2523888784552688",
      "2523888217886078",
      "2523888534552713",
      "2523887371219496",
      "2523887771219456",
      "2523887571219476"
    ];
    let sticker = data[Math.floor(Math.random() * data.length)];
    let moment = require("moment-timezone");
    let hours = moment.tz('Asia/Ho_Chi_Minh').format('HHmm');
    let data2 = [
      "t·ªët l√†nh",
      "vui v·∫ª"
    ];
    let text = data2[Math.floor(Math.random() * data2.length)]
    let session = (
    hours > 0001 && hours <= 400 ? "s√°ng tinh m∆°" : 
    hours > 401 && hours <= 700 ? "s√°ng s·ªõm" :
    hours > 701 && hours <= 1000 ? "s√°ng" :
    hours > 1001 && hours <= 1200 ? "tr∆∞a" : 
    hours > 1201 && hours <= 1700 ? "chi·ªÅu" : 
    hours > 1701 && hours <= 1800 ? "chi·ªÅu t√†" : 
    hours > 1801 && hours <= 2100 ? "t·ªëi" : 
    hours > 2101 && hours <= 2400 ? "t·ªëi mu·ªôn" : 
    "l·ªói");
    let name = await Users.getNameUser(event.senderID);
    let mentions = [];
    mentions.push({
      tag: name,
      id: event.senderID
    })
    let msg = {body: `Xin ch√†o ${name}, ch√∫c b·∫°n m·ªôt bu·ªïi ${session} ${text} ‚ù§Ô∏è`, mentions}
    api.sendMessage(msg, event.threadID, (e, info) => {
      setTimeout(() => {
        api.sendMessage({sticker: sticker}, event.threadID);
      }, 100)
    }, event.messageID)
  }
      }
}

module.exports.languages = {
  "vi": {
    "on": "B·∫≠t",
    "off": "TƒÉÃÅt",
		"successText": `${this.config.name} th√†nh c√¥ng`,
	},
	"en": {
		"on": "on",
		"off": "off",
		"successText": "success!",
	}
}

module.exports.run = async ({ event, api, Threads, getText }) => {
  let { threadID, messageID } = event;
  let data = (await Threads.getData(threadID)).data;
	if (typeof data["hi"] == "undefined" || data["hi"] == true) data["hi"] = false;
	else data["hi"] = true;
	await Threads.setData(threadID, {
		data
	});
	global.data.threadData.set(threadID, data);
	return api.sendMessage(`${(data["hi"] == false) ? getText("off") : getText("on")} ${getText("successText")}`, threadID, messageID);
}
